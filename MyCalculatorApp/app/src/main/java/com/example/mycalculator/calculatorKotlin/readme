Функционал калькулятора:
1) считывает все выражение сразу
2) может принимать выражение со скобками, произведением,
деления, суммы, вычитания

Что калькулятор не может:
1) не сможет справится, если в выражении
стоит скобка внутри скобок. Пример: 5 + 3 * ((8 / 2) + 7)
2) не задается пользователем с какой точностью давать ответ
в данном калькуляторе точность - 6 знаков после запятой
(class Divide (return x1.divide(x2, 6, RoundingMode.HALF_UP)))
3) не запоминает предыдущий результат
4) не знает про степени
!
класс IsCorrectExpression отвечает за правильность вводимого выражения
проверяет на:
+ содержатся ли буквы в выражении
+ правильно ли расставлены скобки
+ если пользователь ввел два операнца сразу
+ посторонние символы !@#$%&"|~`'

класс IsCorrectExpression предусматривает случай, если пользователь
неверно ввел пробелы в выражении.
класс чистит строку от пользовательких пробелов,
далее опираясь на вычислительные операнды расставляет пробелы.
Также прописано отдельно случай с операндом "-", так как минус может
являться как определителем отрицательного числа, так и операндом вычитания

интерфейс ICalculatorAction отвечает за простые вычисления

интерфейс ICalculatorPriority отвечает за последовательность операций над выражением
посредством выставленного приоритета.
в данном калькуляторе реализовано:
Высший приоритет: считаются выражения внутри скобки
Средний приоритет: считаются умножение и деление
Малый приоритет: считает сложение и вычитание

